function IPN_writetoGEXF(CIJ, fname, labels, arcs)
%IPN_WRITETOGEXF         Write to Gephi format
%
%   IPN_writetoGEXF(CIJ, fname, labels, arcs);
%
%   This function writes a Gephi .gexf file from a MATLAB matrix
%
%   Inputs:     CIJ,        adjacency matrix
%               fname,      filename minus .gexf extension
%               labels,     labels for nodes, cell
%               arcs,       1 for directed network
%                           0 for an undirected network
%
%   Xi-Nian Zuo, New York University, 2010.


N = size(CIJ,1);
fid = fopen(cat(2,fname,'.gexf'), 'w');

%% HEADER
hdl1 = '<?xml version="1.0" encoding="UTF-8"?>';
fprintf(fid, '%s \r', hdl1);
hdl2 = '<gexf xmlns="http://www.gexf.net/1.1draft"';
fprintf(fid, '%s \r', hdl2);
hdl3 = '      xmlns:xsi="http://www.w3.org/2001/XMLSchema−instance"';
fprintf(fid, '%s \r', hdl3);
hdl4 = '     xsi:schemaLocation="http://www.gexf.net/1.1draft';
fprintf(fid, '%s \r', hdl4);
hdl5 = '                        http://www.gexf.net/1.1draft/gexf.xsd"';
fprintf(fid, '%s \r', hdl5);
hdl6 = '     version="1.1">';
fprintf(fid, '%s \r', hdl6);
hdl7 = ' <meta lastmodifieddate="2009−03−20">';
fprintf(fid, '%s \r', hdl7);
hdl8 = '   <creator>Gephi.org</creator>';
fprintf(fid, '%s \r', hdl8);
hdl9 = '   <description>A Gephi file generated by Xi-Nian Zuo</description>';
fprintf(fid, '%s \r', hdl9);
hdl10 = '   <keywords>Gephi, Graph, Network</keywords>';
fprintf(fid, '%s \r', hdl10);
hdl11 = '  </meta>';
fprintf(fid, '%s \r', hdl11);
if arcs
	hdl12 = ' <graph defaultedgetype="directed">';
else
	hdl12 = ' <graph defaultedgetype="undirected">';
end
fprintf(fid, '%s \r', hdl12);
%% NODES
fprintf(fid, '  <nodes> \r');
for i = 1:N
	ndl = ['   <node id="' num2str(i-1) '" label="' labels{i} '" />'];
    fprintf(fid, '%s \r', ndl);
end
fprintf(fid, '   </nodes> \r');
%% EDGES
fprintf(fid, '  <edges> \r');
k=1;
for i = 1:N
    for j = 1:N
        if CIJ(i,j) ~= 0
			edl = ['   <edge id="' num2str(k-1) '" source="' num2str(i-1) '" target="' ...
                num2str(j-1) '" weight="' num2str(CIJ(i,j)) '" />'];
            fprintf(fid, '%s \r', edl);
			k = k + 1;
        end
    end
end
%% CLOSE
fprintf(fid, '  </edges> \r');
fprintf(fid, ' </graph> \r');
fprintf(fid, '</gexf> \r');
fclose(fid);
